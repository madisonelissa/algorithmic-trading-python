import numpy as np
import pandas as pd
import requests
import xlsxwriter
import math
from secret import IEX_CLOUD_API_TOKEN as token

def chunks(lst, n):
    #break up list into sublists of n length
    for i in range(0, len(lst), n):
        yield lst[i:i + n]
        
#get S&P 500 stock tickers from CSV file
stocks = pd.read_csv('sp_500_stocks.csv')

#break stocks into formatted chunks for batch API calls
symbol_groups = list(chunks(stocks['Ticker'], 100))
symbol_strings = []
for i in range(0, len(symbol_groups)):
    symbol_strings.append(','.join(symbol_groups[i]))

#batch API calls and creating pandas dataframe (each stock ticker, price, and market cap)
my_columns = ['Ticker', 'Stock Price', 'Market Cap', 'Number of Shares to Buy']
buy_dataframe = pd.DataFrame(columns = my_columns)
for symbol_string in symbol_strings:
    batch_api_call_url = f'https://api.iex.cloud/v1/data/core/quote/{symbol_string}?token={token}'
    data = requests.get(batch_api_call_url).json()
    for i, symbol in enumerate(symbol_string.split(',')):
        buy_dataframe = buy_dataframe.append(
            pd.Series(
                [
                    symbol,
                    data[i]['latestPrice'],
                    data[i]['marketCap'],
                    'N/A'
                ],
                index=my_columns
            ),
            ignore_index=True
        )

portfolio_size = input('Enter the value of your portfolio: ')
try:
    val = float(portfolio_size)
except ValueError:
    print('Please enter an integer value.')
    portfolio_size = input('Enter the value of your portfolio: ')
    val = float(portfolio_size)

#setting "Number of Shares to Buy" for each stock based on equal-weight strategy
position_size = val/len(buy_dataframe.index)
for i in range(0, len(buy_dataframe.index)):
    buy_dataframe.loc[i, 'Number of Shares to Buy'] = math.floor(position_size/buy_dataframe.loc[i, 'Stock Price'])

#formatting XLSX document
writer = pd.ExcelWriter('recommended-trades.xlsx', engine = 'xlsxwriter')
buy_dataframe.to_excel(writer, 'Recommended Trades', index=False)

background_color = '#0a0a23'
font_color = '#ffffff'

string_format = writer.book.add_format(
    {
        'font_color': font_color,
        'bg_color': background_color,
        'border': 1
    }
)

dollar_format = writer.book.add_format(
    {
        'num_format': '$0.00',
        'font_color': font_color,
        'bg_color': background_color,
        'border': 1
    }
)

integer_format = writer.book.add_format(
    {
        'num_format': '0',
        'font_color': font_color,
        'bg_color': background_color,
        'border': 1
    }
)

column_formats = {
    'A': ['Ticker', string_format],
    'B': ['Stock Price', dollar_format],
    'C': ['Market Cap', dollar_format],
    'D': ['Number of Shares to Buy', integer_format]
}

for column in column_formats.keys():
    writer.sheets['Recommended Trades'].set_column(f'{column}:{column}', 18, column_formats[column][1])
    writer.sheets['Recommended Trades'].write(f'{column}1',column_formats[column][0],column_formats[column][1])
writer.save()